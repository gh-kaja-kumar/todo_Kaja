// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TodoApi.Data;

#nullable disable

namespace TodoApi.Migrations
{
    [DbContext(typeof(TodoDbContext))]
    partial class TodoDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.6");

            modelBuilder.Entity("TodoApi.Models.AppUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("AppUsers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "user1@example.com",
                            Password = "1234",
                            Username = "user1"
                        },
                        new
                        {
                            Id = 2,
                            Email = "user2@example.com",
                            Password = "1234",
                            Username = "user2"
                        });
                });

            modelBuilder.Entity("TodoApi.Models.TodoItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AppUserId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Priority")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId");

                    b.ToTable("TodoItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AppUserId = 1,
                            Category = "Personal",
                            Description = "Wake up early in the morning",
                            DueDate = new DateTime(2025, 7, 1, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCompleted = false,
                            Priority = 1,
                            Title = "Wake Up"
                        },
                        new
                        {
                            Id = 2,
                            AppUserId = 1,
                            Category = "Personal",
                            Description = "Go to bed early",
                            DueDate = new DateTime(2025, 7, 1, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCompleted = false,
                            Priority = 0,
                            Title = "Sleep"
                        },
                        new
                        {
                            Id = 3,
                            AppUserId = 2,
                            Category = "Personal",
                            Description = "Wake up early in the morning",
                            DueDate = new DateTime(2025, 7, 1, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCompleted = false,
                            Priority = 1,
                            Title = "Wake Up"
                        },
                        new
                        {
                            Id = 4,
                            AppUserId = 2,
                            Category = "Personal",
                            Description = "Go to bed early",
                            DueDate = new DateTime(2025, 7, 1, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCompleted = false,
                            Priority = 0,
                            Title = "Sleep"
                        });
                });

            modelBuilder.Entity("TodoApi.Models.TodoItem", b =>
                {
                    b.HasOne("TodoApi.Models.AppUser", "AppUser")
                        .WithMany("TodoItems")
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");
                });

            modelBuilder.Entity("TodoApi.Models.AppUser", b =>
                {
                    b.Navigation("TodoItems");
                });
#pragma warning restore 612, 618
        }
    }
}
